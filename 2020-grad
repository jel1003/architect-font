<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8" >
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Variable Font example - weight</title>

  <style>
	@font-face {
	font-family:Gotham, "Helvetica Neue", Helvetica, Arial, "sans-serif" ;
	src: url("./SpaceCowgirl.ttf");
    }

    html {
		box-sizing: border-box;
		font-size: 100%;
		box-sizing: border-box;
		margin: 0;
		padding: 0;
		top: 20px;
		left: 0px;
		background: #ffffff 0% 0% no-repeat padding-box;
		opacity: 1;
	
    }
    
    *,
  
    }

    body {
      margin: 20px;
      padding: 0;
    }


    .playable-buttons {
      text-align: center;
      width: 100%;
      padding: 10px;
      font-size: 10px;
	
    }

    .demo {
      --text-axis: 100;
    }
	.slidecontainer {
	  width: 100%; /* Width of the outside container */
	}

	/* The slider itself */
	.controls--slider {
	  -webkit-appearance: none;  /* Override default CSS styles */
	  width: 60%; /* Full-width */
	  height: 4px; /* Specified height */
	  background: #000; /* Grey background */
	  outline: none; /* Remove outline */
	  opacity: 1; /* Set transparency (for mouse-over effects on hover) */
	  -webkit-transition: .1s; /* 0.2 seconds transition on hover */
	  transition: opacity .1s;
	  align: center;
	  font-size: 10px;

	}

	/* Mouse-over effects */
	.controls--slider:hover {
		background: #333333; /* Fully shown on mouse-over */
	}

	/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
	.controls--slider::-webkit-slider-thumb {
		-webkit-appearance:none; /* Override default look */
		border-radius: 8px;
		width: 16px; /* Set a specific slider handle width */
		height: 16px; /* Slider handle height */
		background: #000000; /*  background */
		cursor: pointer; /* Cursor on hover */
		}

	.controls--slider::-moz-range-thumb {
		width: 25px; /* Set a specific slider handle width */
		height: 25px; /* Slider handle height */
		background: #fff; /* Green background */
		cursor: pointer; /* Cursor on hover */
	}
	
  /* ID는 #을 붙인다*/
	 
  #reset {
	  background-color: #000; 
	  border: none;
	  width: 80px;
	  height: 30px;
	  color: white;
	  padding: 2 5;
	  text-align: center;
	  text-decoration: none;
	  display: inline-block;
	  font-size: 12px;
	  border-radius: 6px;
	}

  </style>
	
  <style class="editable3">
    /* Adjust with slider & custom property */
    .container3 {
		font-variation-settings: 'wght' var(--text-axis);
		font-size:120px;
		line-height:150px;
		text-align: center;
		color: #000000;
    }
  </style>
</head>

<body>


    <div class="demo3">
      <section class="section section3">
        <div contenteditable="false" class="container container3">
            <p>SpaceCowgirl</p>
        </div>
      </section>
		
      <div class="controls range-slider" align="center">
      <input type="range" name="range-slider" value="100" id="text-axis" class="controls--slider" min="0" max="200"> 
      </div>
    </div>
<br>
<br>
	
  <div class="playable-buttons">
    <input id="reset" type="button" value="Reset" >
	</div>
</body>
<script>
	
  var rangeinput = document.querySelector('.controls--slider');
  var reset = document.getElementById('reset');

  function fillCode() {

    rangeinput.value = 100;
    document.querySelector('.demo3').style.setProperty('--text-axis', 100);
  }

  reset.addEventListener('click', function () {

    fillCode();
  });

  window.addEventListener('load', fillCode);

  // get the inputs
  const inputs = [].slice.call(document.querySelectorAll('.demo3 .controls input'));

  // listen for changes
  inputs.forEach(input => input.addEventListener('change', handleUpdate));
  inputs.forEach(input => input.addEventListener('mousemove', handleUpdate));

  function handleUpdate(e) {
    document.querySelector('.demo3').style.setProperty(`--${this.id}`, this.value);
  }


// JavaScript Document
	</script>
</html>
